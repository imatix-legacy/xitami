/*---------------------------------------------------------------------------*
 *  smtupmc.d - LIBERO dialog data definitions for smtupmc.c.                *
 *  Generated by LIBERO 2.30 on 22 Dec, 1998, 15:35.                         *
 *  Schema file used: smtschm.c.                                             *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
#define _LR_NULL_STATE                  -1
#define terminate_event                 -1
#define empty_event                     0
#define error_event                     1
#define exception_event                 2
#define exit_event                      3
#define halt_event                      4
#define help_event                      5
#define list_event                      6
#define ok_event                        7
#define shutdown_event                  8
#define sock_closed_event               9
#define sock_error_event                10
#define start_event                     11
#define status_event                    12
#define stop_event                      13
#define upm_error_event                 14
#define upm_halting_event               15
#define upm_ready_event                 16
#define upm_start_error_event           17
#define upm_start_ok_event              18
#define upm_stop_error_event            19
#define upm_stop_ok_event               20
#define upm_task_id_event               21
#define upm_task_nf_event               22
#define upm_task_ok_event               23
#define upm_task_running_event          24
#define upm_task_stopped_event          25
#define version_event                   26
#define _LR_STATE_after_init            0
#define _LR_STATE_have_connection       1
#define _LR_STATE_making_connection     2
#define _LR_STATE_daemon_message        3
#define _LR_STATE_user_command          4
#define _LR_STATE_daemon_halting        5
#define _LR_STATE_defaults              6
#define _LR_defaults_state              6


/*- Function prototypes and macros ------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

MODULE initialise_the_thread        (THREAD *thread);
MODULE check_daemon_message         (THREAD *thread);
MODULE connect_to_upm_daemon        (THREAD *thread);
MODULE get_daemon_message           (THREAD *thread);
MODULE get_user_command_input       (THREAD *thread);
MODULE send_daemon_halt_command     (THREAD *thread);
MODULE send_daemon_list_command     (THREAD *thread);
MODULE send_daemon_start_command    (THREAD *thread);
MODULE send_daemon_status_command   (THREAD *thread);
MODULE send_daemon_stop_command     (THREAD *thread);
MODULE show_help_information        (THREAD *thread);
MODULE show_task_name               (THREAD *thread);
MODULE show_version_information     (THREAD *thread);
MODULE signal_connected_okay        (THREAD *thread);
MODULE signal_invalid_command       (THREAD *thread);
MODULE signal_socket_closed         (THREAD *thread);
MODULE signal_socket_error          (THREAD *thread);
MODULE signal_task_not_known        (THREAD *thread);
MODULE signal_task_not_started      (THREAD *thread);
MODULE signal_task_not_stopped      (THREAD *thread);
MODULE signal_task_running          (THREAD *thread);
MODULE signal_task_started_ok       (THREAD *thread);
MODULE signal_task_stopped          (THREAD *thread);
MODULE signal_task_stopped_ok       (THREAD *thread);
MODULE signal_unexpected_message    (THREAD *thread);
MODULE signal_upm_fatal_error       (THREAD *thread);
MODULE store_connection_data        (THREAD *thread);
MODULE terminate_the_thread         (THREAD *thread);

#define the_next_event              _the_next_event
#define the_exception_event         _the_exception_event
#define the_external_event          _the_external_event
#define exception_raised            _exception_raised
#define io_completed                _io_completed


/*- Static areas shared by all threads --------------------------------------*/

static word _LR_nextst [7][27] =
{
    { 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,3,3,3,3,3,0,3,3,0 },
    { 4,4,0,4,5,4,3,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,6,0,0,0,0,0,6,6,6,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0 }
};

static word _LR_action [7][27] =
{
    { 0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,10,9,6,11,0,12,13,0 },
    { 5,21,0,2,18,20,14,0,0,0,0,16,17,15,0,0,0,0,0,0,0,0,0,0,0,0
     ,19
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,2,0,0,0,0,0,2,22,23,0,0,0,25,24,24,24,24,24,24,24,24,24
     ,24,24,0
    }
};

static word _LR_offset [] =
{
    0,
    0,
    2,
    4,
    8,
    11,
    13,
    17,
    21,
    25,
    29,
    33,
    37,
    41,
    45,
    49,
    53,
    57,
    61,
    65,
    68,
    71,
    74,
    77,
    80,
    83
};

static word _LR_vector [] =
{
    1,_LR_STOP,
    26,_LR_STOP,
    25,2,0,_LR_STOP,
    12,3,_LR_STOP,
    3,_LR_STOP,
    10,2,0,_LR_STOP,
    20,2,0,_LR_STOP,
    17,2,0,_LR_STOP,
    22,2,0,_LR_STOP,
    18,2,0,_LR_STOP,
    16,2,0,_LR_STOP,
    19,2,0,_LR_STOP,
    21,2,0,_LR_STOP,
    5,2,0,_LR_STOP,
    8,2,0,_LR_STOP,
    6,2,0,_LR_STOP,
    7,2,0,_LR_STOP,
    4,2,0,_LR_STOP,
    11,3,_LR_STOP,
    9,3,_LR_STOP,
    13,3,_LR_STOP,
    14,26,_LR_STOP,
    15,26,_LR_STOP,
    23,26,_LR_STOP,
    24,26,_LR_STOP
};

static HOOK *_LR_module [27] = {
    check_daemon_message,
    connect_to_upm_daemon,
    get_daemon_message,
    get_user_command_input,
    send_daemon_halt_command,
    send_daemon_list_command,
    send_daemon_start_command,
    send_daemon_status_command,
    send_daemon_stop_command,
    show_help_information,
    show_task_name,
    show_version_information,
    signal_connected_okay,
    signal_invalid_command,
    signal_socket_closed,
    signal_socket_error,
    signal_task_not_known,
    signal_task_not_started,
    signal_task_not_stopped,
    signal_task_running,
    signal_task_started_ok,
    signal_task_stopped,
    signal_task_stopped_ok,
    signal_unexpected_message,
    signal_upm_fatal_error,
    store_connection_data,
    terminate_the_thread
};

#if (defined (DEBUG))
static char *_LR_mname [27] =
{
     "Check-Daemon-Message",
     "Connect-To-Upm-Daemon",
     "Get-Daemon-Message",
     "Get-User-Command-Input",
     "Send-Daemon-Halt-Command",
     "Send-Daemon-List-Command",
     "Send-Daemon-Start-Command",
     "Send-Daemon-Status-Command",
     "Send-Daemon-Stop-Command",
     "Show-Help-Information",
     "Show-Task-Name",
     "Show-Version-Information",
     "Signal-Connected-Okay",
     "Signal-Invalid-Command",
     "Signal-Socket-Closed",
     "Signal-Socket-Error",
     "Signal-Task-Not-Known",
     "Signal-Task-Not-Started",
     "Signal-Task-Not-Stopped",
     "Signal-Task-Running",
     "Signal-Task-Started-Ok",
     "Signal-Task-Stopped",
     "Signal-Task-Stopped-Ok",
     "Signal-Unexpected-Message",
     "Signal-Upm-Fatal-Error",
     "Store-Connection-Data",
     "Terminate-The-Thread"
};

static char *_LR_sname [7] =
{
     "After-Init",
     "Have-Connection",
     "Making-Connection",
     "Daemon-Message",
     "User-Command",
     "Daemon-Halting",
     "Defaults"
};

static char *_LR_ename [27] =
{
     "Empty-Event",
     "Error-Event",
     "Exception-Event",
     "Exit-Event",
     "Halt-Event",
     "Help-Event",
     "List-Event",
     "Ok-Event",
     "Shutdown-Event",
     "Sock-Closed-Event",
     "Sock-Error-Event",
     "Start-Event",
     "Status-Event",
     "Stop-Event",
     "Upm-Error-Event",
     "Upm-Halting-Event",
     "Upm-Ready-Event",
     "Upm-Start-Error-Event",
     "Upm-Start-Ok-Event",
     "Upm-Stop-Error-Event",
     "Upm-Stop-Ok-Event",
     "Upm-Task-Id-Event",
     "Upm-Task-Nf-Event",
     "Upm-Task-Ok-Event",
     "Upm-Task-Running-Event",
     "Upm-Task-Stopped-Event",
     "Version-Event"
};
#else
static char *_LR_mname [27] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9",
     "10",
     "11",
     "12",
     "13",
     "14",
     "15",
     "16",
     "17",
     "18",
     "19",
     "20",
     "21",
     "22",
     "23",
     "24",
     "25",
     "26"
};

static char *_LR_sname [7] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6"
};

static char *_LR_ename [27] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9",
     "10",
     "11",
     "12",
     "13",
     "14",
     "15",
     "16",
     "17",
     "18",
     "19",
     "20",
     "21",
     "22",
     "23",
     "24",
     "25",
     "26"
};
#endif
