/*---------------------------------------------------------------------------*
 *  smttime.d - LIBERO dialog data definitions for smttime.c.                *
 *  Generated by LIBERO 2.30 on 18 Jan, 1999,  9:50.                         *
 *  Schema file used: smtschm.c.                                             *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
#define _LR_NULL_STATE                  -1
#define terminate_event                 -1
#define alarm_event                     0
#define clock_event                     1
#define error_event                     2
#define exception_event                 3
#define flush_event                     4
#define ok_event                        5
#define shutdown_event                  6
#define timer_event                     7
#define wakeup_event                    8
#define _LR_STATE_after_init            0
#define _LR_STATE_expect_event          1
#define _LR_STATE_defaults              2
#define _LR_defaults_state              2


/*- Function prototypes and macros ------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

MODULE initialise_the_thread        (THREAD *thread);
MODULE terminate_the_thread         (THREAD *thread);
MODULE flush_requests_for_client    (THREAD *thread);
MODULE create_single_alarm_request  (THREAD *thread);
MODULE generate_response_events     (THREAD *thread);
MODULE create_single_wakeup_request (THREAD *thread);
MODULE create_cycled_clock_request  (THREAD *thread);
MODULE destroy_all_requests         (THREAD *thread);

#define the_next_event              _the_next_event
#define the_exception_event         _the_exception_event
#define the_external_event          _the_external_event
#define exception_raised            _exception_raised
#define io_completed                _io_completed


/*- Static areas shared by all threads --------------------------------------*/

static word _LR_nextst [3][9] =
{
    { 0,0,0,0,0,1,0,0,0 },
    { 1,1,0,0,1,0,0,1,1 },
    { 2,2,2,2,2,2,2,2,2 }
};

static word _LR_action [3][9] =
{
    { 0,0,2,0,0,1,0,0,0 },
    { 3,5,0,0,6,0,0,7,4 },
    { 1,1,1,8,1,1,8,1,1 }
};

static word _LR_offset [] =
{
    0,
    0,
    1,
    3,
    7,
    11,
    15,
    18,
    20
};

static word _LR_vector [] =
{
    _LR_STOP,
    0,_LR_STOP,
    1,2,3,_LR_STOP,
    1,4,3,_LR_STOP,
    1,5,3,_LR_STOP,
    1,3,_LR_STOP,
    3,_LR_STOP,
    6,0,_LR_STOP
};

static HOOK *_LR_module [7] = {
    terminate_the_thread,
    flush_requests_for_client,
    create_single_alarm_request,
    generate_response_events,
    create_single_wakeup_request,
    create_cycled_clock_request,
    destroy_all_requests
};

#if (defined (DEBUG))
static char *_LR_mname [7] =
{
     "Terminate-The-Thread",
     "Flush-Requests-For-Client",
     "Create-Single-Alarm-Request",
     "Generate-Response-Events",
     "Create-Single-Wakeup-Request",
     "Create-Cycled-Clock-Request",
     "Destroy-All-Requests"
};

static char *_LR_sname [3] =
{
     "After-Init",
     "Expect-Event",
     "Defaults"
};

static char *_LR_ename [9] =
{
     "Alarm-Event",
     "Clock-Event",
     "Error-Event",
     "Exception-Event",
     "Flush-Event",
     "Ok-Event",
     "Shutdown-Event",
     "Timer-Event",
     "Wakeup-Event"
};
#else
static char *_LR_mname [7] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6"
};

static char *_LR_sname [3] =
{
     "0",
     "1",
     "2"
};

static char *_LR_ename [9] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8"
};
#endif
