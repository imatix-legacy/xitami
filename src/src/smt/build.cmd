/*
 *  Build script for iMatix SMT Package, for OS/2.
 *  Requires the iMatix 'c.cmd' script.
 *
 *  Generated by Otto v2.2 from buildsmt.txt on 100/04/01, 16:17:07
 *  For more info see Otto documentation at http://www.imatix.com.
 *  Bug reports & questions to <ewen@imatix.com>
 *  ---------------------------------------------------------------
 */
'@echo off'

/* Configuration options ------------------------------------------ 
 *
 * The actual programs use to compile, compile and archive, and 
 * link programs can be changed by editing the subroutines
 * CompileToObj, CompileToLib, and LinkProgram, at the bottom of
 * this script.  REXX doesn't support variable substitution in
 * the name of the called routine, so they cannot be defined here.
 */

SAY "Building the iMatix Simple Multi-Threading kernel (SMT)"
SAY "You must already have built the SFL package and installed the"
SAY "SFL library.  If not, Ctrl-C now and get your hands on the SFL."
'if .%1==. pause >nul'
SAY "Checking for required files..."

/* require $LIB libsfl */
CALL AssertFileExists 'libsfl.a'

/* require smtlog.c   smtlog.l  smtlog.d  smtlog.i */
CALL AssertFileExists 'smtlog.c'
CALL AssertFileExists 'smtlog.l'
CALL AssertFileExists 'smtlog.d'
CALL AssertFileExists 'smtlog.i'

/* require smtecho.c  smtecho.l smtecho.d smtecho.i */
CALL AssertFileExists 'smtecho.c'
CALL AssertFileExists 'smtecho.l'
CALL AssertFileExists 'smtecho.d'
CALL AssertFileExists 'smtecho.i'

/* require smthttp.c  smthttp.l smthttp.d smthttp.i */
CALL AssertFileExists 'smthttp.c'
CALL AssertFileExists 'smthttp.l'
CALL AssertFileExists 'smthttp.d'
CALL AssertFileExists 'smthttp.i'

/* require smtoper.c  smtoper.l smtoper.d smtoper.i */
CALL AssertFileExists 'smtoper.c'
CALL AssertFileExists 'smtoper.l'
CALL AssertFileExists 'smtoper.d'
CALL AssertFileExists 'smtoper.i'

/* require smtsock.c  smtsock.l smtsock.d smtsock.i */
CALL AssertFileExists 'smtsock.c'
CALL AssertFileExists 'smtsock.l'
CALL AssertFileExists 'smtsock.d'
CALL AssertFileExists 'smtsock.i'

/* require smtslot.c  smtslot.l smtslot.d smtslot.i */
CALL AssertFileExists 'smtslot.c'
CALL AssertFileExists 'smtslot.l'
CALL AssertFileExists 'smtslot.d'
CALL AssertFileExists 'smtslot.i'

/* require smtsimu.c  smtsimu.l smtsimu.d smtsimu.i */
CALL AssertFileExists 'smtsimu.c'
CALL AssertFileExists 'smtsimu.l'
CALL AssertFileExists 'smtsimu.d'
CALL AssertFileExists 'smtsimu.i'

/* require smttime.c  smttime.l smttime.d smttime.i */
CALL AssertFileExists 'smttime.c'
CALL AssertFileExists 'smttime.l'
CALL AssertFileExists 'smttime.d'
CALL AssertFileExists 'smttime.i'

/* require smttran.c  smttran.l smttran.d smttran.i */
CALL AssertFileExists 'smttran.c'
CALL AssertFileExists 'smttran.l'
CALL AssertFileExists 'smttran.d'
CALL AssertFileExists 'smttran.i'

/* require smtupmc.c  smtupmc.l smtupmc.d smtupmc.i */
CALL AssertFileExists 'smtupmc.c'
CALL AssertFileExists 'smtupmc.l'
CALL AssertFileExists 'smtupmc.d'
CALL AssertFileExists 'smtupmc.i'

/* require smtupmd.c  smtupmd.l smtupmd.d smtupmd.i */
CALL AssertFileExists 'smtupmd.c'
CALL AssertFileExists 'smtupmd.l'
CALL AssertFileExists 'smtupmd.d'
CALL AssertFileExists 'smtupmd.i'

/* require smttst1.c  smttst1.l smttst1.d smttst1.i */
CALL AssertFileExists 'smttst1.c'
CALL AssertFileExists 'smttst1.l'
CALL AssertFileExists 'smttst1.d'
CALL AssertFileExists 'smttst1.i'

/* require smttst2.c  smttst2.l smttst2.d smttst2.i */
CALL AssertFileExists 'smttst2.c'
CALL AssertFileExists 'smttst2.l'
CALL AssertFileExists 'smttst2.d'
CALL AssertFileExists 'smttst2.i'

/* require smttst3.c  smttst3.l smttst3.d smttst3.i */
CALL AssertFileExists 'smttst3.c'
CALL AssertFileExists 'smttst3.l'
CALL AssertFileExists 'smttst3.d'
CALL AssertFileExists 'smttst3.i'

/* require smtftpc.c  smtftpc.l smtftpc.d smtftpc.i */
CALL AssertFileExists 'smtftpc.c'
CALL AssertFileExists 'smtftpc.l'
CALL AssertFileExists 'smtftpc.d'
CALL AssertFileExists 'smtftpc.i'

/* require smtftpd.c  smtftpd.l smtftpd.d smtftpd.i */
CALL AssertFileExists 'smtftpd.c'
CALL AssertFileExists 'smtftpd.l'
CALL AssertFileExists 'smtftpd.d'
CALL AssertFileExists 'smtftpd.i'

/* require smtrdns.c  smtrdns.l smtrdns.d smtrdns.i */
CALL AssertFileExists 'smtrdns.c'
CALL AssertFileExists 'smtrdns.l'
CALL AssertFileExists 'smtrdns.d'
CALL AssertFileExists 'smtrdns.i'

/* require smthlog.c  smthlog.l smthlog.d smthlog.i */
CALL AssertFileExists 'smthlog.c'
CALL AssertFileExists 'smthlog.l'
CALL AssertFileExists 'smthlog.d'
CALL AssertFileExists 'smthlog.i'

/* require smthttpl.c smthttpl.h */
CALL AssertFileExists 'smthttpl.c'
CALL AssertFileExists 'smthttpl.h'

/* require smtrdnsl.c smtrdnsl.h */
CALL AssertFileExists 'smtrdnsl.c'
CALL AssertFileExists 'smtrdnsl.h'

/* require smtmsg.c   smtmsg.h */
CALL AssertFileExists 'smtmsg.c'
CALL AssertFileExists 'smtmsg.h'

/* require smtsslm.c  smtsslm.h */
CALL AssertFileExists 'smtsslm.c'
CALL AssertFileExists 'smtsslm.h'

/* require smtlib.c   smtlib.h */
CALL AssertFileExists 'smtlib.c'
CALL AssertFileExists 'smtlib.h'

/* require smtftpl.c  smtftpl.h */
CALL AssertFileExists 'smtftpl.c'
CALL AssertFileExists 'smtftpl.h'

/* require xixlogm.c  xixlogm.h xixlog.h */
CALL AssertFileExists 'xixlogm.c'
CALL AssertFileExists 'xixlogm.h'
CALL AssertFileExists 'xixlog.h'

/* require xitami.c */
CALL AssertFileExists 'xitami.c'

/* require xiadm00.c  formio.h */
CALL AssertFileExists 'xiadm00.c'
CALL AssertFileExists 'formio.h'

/* require xiadmin.c  xiadmin.l xiadmin.d xiadmin.i */
CALL AssertFileExists 'xiadmin.c'
CALL AssertFileExists 'xiadmin.l'
CALL AssertFileExists 'xiadmin.d'
CALL AssertFileExists 'xiadmin.i'

/* require xierror.c  xierror.l xierror.d xierror.i */
CALL AssertFileExists 'xierror.c'
CALL AssertFileExists 'xierror.l'
CALL AssertFileExists 'xierror.d'
CALL AssertFileExists 'xierror.i'

/* require xilrwp.c   xilrwp.l  xilrwp.d  xilrwp.i */
CALL AssertFileExists 'xilrwp.c'
CALL AssertFileExists 'xilrwp.l'
CALL AssertFileExists 'xilrwp.d'
CALL AssertFileExists 'xilrwp.i'

/* require xixlog.c   xixlog.l  xixlog.d  xixlog.i */
CALL AssertFileExists 'xixlog.c'
CALL AssertFileExists 'xixlog.l'
CALL AssertFileExists 'xixlog.d'
CALL AssertFileExists 'xixlog.i'

/* require echocli.c  echod.c   tsttime.c tstslot.c tstrdns.c */
CALL AssertFileExists 'echocli.c'
CALL AssertFileExists 'echod.c'
CALL AssertFileExists 'tsttime.c'
CALL AssertFileExists 'tstslot.c'
CALL AssertFileExists 'tstrdns.c'

/* require xixlat.c */
CALL AssertFileExists 'xixlat.c'

/* require upmc.c upmd.c smtupm.h */
CALL AssertFileExists 'upmc.c'
CALL AssertFileExists 'upmd.c'
CALL AssertFileExists 'smtupm.h'

/* require sfl.h */
CALL AssertFileExists 'sfl.h'

/* require xiadm01.h xiadm02.h xiadm03.h xiadm04.h xiadm05.h */
CALL AssertFileExists 'xiadm01.h'
CALL AssertFileExists 'xiadm02.h'
CALL AssertFileExists 'xiadm03.h'
CALL AssertFileExists 'xiadm04.h'
CALL AssertFileExists 'xiadm05.h'

/* require xiadm06.h xiadm07.h xiadm08.h xiadm09.h xiadm10.h */
CALL AssertFileExists 'xiadm06.h'
CALL AssertFileExists 'xiadm07.h'
CALL AssertFileExists 'xiadm08.h'
CALL AssertFileExists 'xiadm09.h'
CALL AssertFileExists 'xiadm10.h'

/* require xiadm11.h xiadm12.h xiadm13.h xiadm14.h xiadm15.h */
CALL AssertFileExists 'xiadm11.h'
CALL AssertFileExists 'xiadm12.h'
CALL AssertFileExists 'xiadm13.h'
CALL AssertFileExists 'xiadm14.h'
CALL AssertFileExists 'xiadm15.h'

/* require xiadm16.h xiadm17.h xiadm18.h xiadm18.h xiadm19.h */
CALL AssertFileExists 'xiadm16.h'
CALL AssertFileExists 'xiadm17.h'
CALL AssertFileExists 'xiadm18.h'
CALL AssertFileExists 'xiadm18.h'
CALL AssertFileExists 'xiadm19.h'

/* require xiadm20.h xiadm21.h xiadm22.h xiadm23.h xiadm24.h */
CALL AssertFileExists 'xiadm20.h'
CALL AssertFileExists 'xiadm21.h'
CALL AssertFileExists 'xiadm22.h'
CALL AssertFileExists 'xiadm23.h'
CALL AssertFileExists 'xiadm24.h'

/* require xiadm25.h xiadm26.h */
CALL AssertFileExists 'xiadm25.h'
CALL AssertFileExists 'xiadm26.h'

/* require smtschm.c xitami.aut ftpusers.aut ftpdirs.aut xitami.cfg */
CALL AssertFileExists 'smtschm.c'
CALL AssertFileExists 'xitami.aut'
CALL AssertFileExists 'ftpusers.aut'
CALL AssertFileExists 'ftpdirs.aut'
CALL AssertFileExists 'xitami.cfg'

/* delete $lib libsmt */
'if exist libsmt.a del libsmt.a >nul'

/* library libsmt */

/* compile smtlog  smtmsg  smtecho smthttp smtoper smtsock */
CALL CompileToLib 'smtlog' 'libsmt'
CALL CompileToLib 'smtmsg' 'libsmt'
CALL CompileToLib 'smtecho' 'libsmt'
CALL CompileToLib 'smthttp' 'libsmt'
CALL CompileToLib 'smtoper' 'libsmt'
CALL CompileToLib 'smtsock' 'libsmt'

/* compile smtslot smtsimu smtupmd smtupmc smttran smttime */
CALL CompileToLib 'smtslot' 'libsmt'
CALL CompileToLib 'smtsimu' 'libsmt'
CALL CompileToLib 'smtupmd' 'libsmt'
CALL CompileToLib 'smtupmc' 'libsmt'
CALL CompileToLib 'smttran' 'libsmt'
CALL CompileToLib 'smttime' 'libsmt'

/* compile smtftpc smtftpd smtlib  smtrdns smthlog */
CALL CompileToLib 'smtftpc' 'libsmt'
CALL CompileToLib 'smtftpd' 'libsmt'
CALL CompileToLib 'smtlib' 'libsmt'
CALL CompileToLib 'smtrdns' 'libsmt'
CALL CompileToLib 'smthlog' 'libsmt'

/* compile smthttpl smtftpl smtrdnsl smtsslm xixlogm */
CALL CompileToLib 'smthttpl' 'libsmt'
CALL CompileToLib 'smtftpl' 'libsmt'
CALL CompileToLib 'smtrdnsl' 'libsmt'
CALL CompileToLib 'smtsslm' 'libsmt'
CALL CompileToLib 'xixlogm' 'libsmt'

/* compile xiadmin xiadm00 xierror xilrwp xixlog */
CALL CompileToLib 'xiadmin' 'libsmt'
CALL CompileToLib 'xiadm00' 'libsmt'
CALL CompileToLib 'xierror' 'libsmt'
CALL CompileToLib 'xilrwp' 'libsmt'
CALL CompileToLib 'xixlog' 'libsmt'

/* compile smttst1 smttst2 smttst3 */
CALL CompileToLib 'smttst1' 'libsmt'
CALL CompileToLib 'smttst2' 'libsmt'
CALL CompileToLib 'smttst3' 'libsmt'

/* library */

/* compile xitami xixlat */
CALL CompileToObj 'xitami'
CALL CompileToObj 'xixlat'

/* link    xitami xixlat */
CALL LinkProgram 'xitami'
CALL LinkProgram 'xixlat'

/* compile echocli echod tsttime tstslot tstrdns upmc upmd */
CALL CompileToObj 'echocli'
CALL CompileToObj 'echod'
CALL CompileToObj 'tsttime'
CALL CompileToObj 'tstslot'
CALL CompileToObj 'tstrdns'
CALL CompileToObj 'upmc'
CALL CompileToObj 'upmd'

/* link    echocli echod tsttime tstslot tstrdns upmc upmd */
CALL LinkProgram 'echocli'
CALL LinkProgram 'echod'
CALL LinkProgram 'tsttime'
CALL LinkProgram 'tstslot'
CALL LinkProgram 'tstrdns'
CALL LinkProgram 'upmc'
CALL LinkProgram 'upmd'

exit 0
/* End script */

/* Utility subroutines ---------------------------------------------------- */

/* AssertFileExists <file>
 *
 * Checks to see if the specified file (argument 1) exists.  If it does the
 * subroutine returns.  If it doesn't, the subroutine displays an error
 * message, and exits the whole script.
 */

AssertFileExists:
fullpath = stream(ARG(1), 'C', 'QUERY EXISTS')
IF fullpath = "" THEN
DO
  SAY ARG(1) "missing -- aborting"
  exit 1
END

return

/* CompileToLib <source> <library>
 *
 * This is a stub routine to sort things out for compiling to a library.
 * We need to set CCLIBNAME to the name of the library, then call the 
 * 'c' script, then reset CCLIBNAME.  
 */

CompileToLib:

PARSE ARG SOURCE LIBRARY

oldenv  = VALUE('CCLIBNAME', LIBRARY, 'OS2ENVIRONMENT')
CALL c              SOURCE
CALL c '-r' LIBRARY SOURCE
LIBRARY = VALUE('CCLIBNAME', oldenv,  'OS2ENVIRONMENT')

return

/* CompileToObj <source>
 *
 * This is a stub routine to sort things out for compiling to an object.
 * We need to clear CCLIBNAME, then call c script with the "-c" parameter
 * to indicate compile only, and then reset CCLIBNAME again.
 */

CompileToObj:

SOURCE = ARG(1)

oldenv  = VALUE('CCLIBNAME', '',      'OS2ENVIRONMENT')
CALL c '-c' SOURCE
LIBRARY = VALUE('CCLIBNAME', oldenv,  'OS2ENVIRONMENT')

return

/* LinkProgram <name>
 *
 * This is a stub routine to sort out the things required for linking.
 * We call the c script with the "-L" parameter to link only.
 */

LinkProgram:

PROGRAM = ARG(1)
CALL c '-L' PROGRAM

return

/* End of Utility Subroutines (remaining functionality now in c.cmd) ------ */
