/*---------------------------------------------------------------------------*
 *  sflxmll.d - LIBERO dialog data definitions for sflxmll.c.                *
 *  Generated by LIBERO 2.30 on 21 Dec, 1998, 10:40.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    char_event = 0,
    close_event = 1,
    comment_event = 2,
    end_of_file_event = 3,
    error_event = 4,
    header_event = 5,
    name_event = 6,
    ok_event = 7,
    open_event = 8,
    option_event = 9,
    slash_event = 10
};

enum {
    _LR_defaults_state = 4,
    _LR_STATE_after_init = 0,
    _LR_STATE_getting_item = 1,
    _LR_STATE_getting_tag = 2,
    _LR_STATE_getting_attr = 3,
    _LR_STATE_defaults = 4
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE open_xml_file                    (void);
MODULE initialise_xml_tree              (void);
MODULE get_next_char                    (void);
MODULE get_next_token                   (void);
MODULE confirm_item_open                (void);
MODULE collect_item_value               (void);
MODULE confirm_all_items_closed         (void);
MODULE close_xml_file                   (void);
MODULE return_success_feedback          (void);
MODULE terminate_the_program            (void);
MODULE attach_new_item                  (void);
MODULE expect_name                      (void);
MODULE confirm_item_name                (void);
MODULE close_the_item                   (void);
MODULE expect_close                     (void);
MODULE skip_rest_of_comment             (void);
MODULE skip_rest_of_header              (void);
MODULE expect_equals_token              (void);
MODULE expect_literal                   (void);
MODULE attach_new_attribute             (void);
MODULE free_literal                     (void);
MODULE process_option_value             (void);
MODULE free_partial_xml_tree            (void);
MODULE return_error_feedback            (void);
MODULE unexpected_token_error           (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][11] =
{
    { 0,0,0,0,0,0,0,1,0,0,0 },
    { 1,0,0,1,0,0,0,0,2,0,0 },
    { 0,0,1,0,0,1,3,0,0,0,1 },
    { 0,1,0,0,0,0,3,0,0,0,1 },
    { 4,4,4,4,4,4,4,4,4,4,4 }
};

static dbyte _LR_action [][11] =
{
    { 0,0,0,0,0,0,0,1,0,0,0 },
    { 3,0,0,4,0,0,0,0,2,0,0 },
    { 0,0,7,0,0,8,5,0,0,0,6 },
    { 0,10,0,0,0,0,9,0,0,0,11 },
    { 14,14,14,14,13,14,14,14,14,12,14 }
};

static dbyte _LR_vector [][5+1] =
{
    {0},
    {0,1,2,_LR_STOP},
    {3,_LR_STOP},
    {4,5,2,_LR_STOP},
    {6,7,8,9,_LR_STOP},
    {10,3,_LR_STOP},
    {11,12,13,14,2,_LR_STOP},
    {15,14,2,_LR_STOP},
    {16,14,2,_LR_STOP},
    {17,18,19,20,3,_LR_STOP},
    {2,_LR_STOP},
    {14,13,2,_LR_STOP},
    {21,3,_LR_STOP},
    {7,22,23,9,_LR_STOP},
    {24,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    open_xml_file,
    initialise_xml_tree,
    get_next_char,
    get_next_token,
    confirm_item_open,
    collect_item_value,
    confirm_all_items_closed,
    close_xml_file,
    return_success_feedback,
    terminate_the_program,
    attach_new_item,
    expect_name,
    confirm_item_name,
    close_the_item,
    expect_close,
    skip_rest_of_comment,
    skip_rest_of_header,
    expect_equals_token,
    expect_literal,
    attach_new_attribute,
    free_literal,
    process_option_value,
    free_partial_xml_tree,
    return_error_feedback,
    unexpected_token_error
};

